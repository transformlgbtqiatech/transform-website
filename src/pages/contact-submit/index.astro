---
import BaseLayout from "@layouts/BaseLayout.astro";
import Socials from "@components/Socials.astro";
import { actions } from "astro:actions";
import { isInputError } from "astro:actions";
import Hero from "@components/astro/Hero.astro";
import { Content as WhyThisInfoContent } from "../../singletons-data/contact-submit/whyThisInfo.mdx";
import { Content as BuyUsAKoFiContent } from "../../singletons-data/contact-submit/buyUsAKoFi.mdx";

import type { SubmitType } from "./_internal/select-options";
import Prose from "@components/astro/Prose.astro";
import { ContactForm } from "./_internal/ContactForm";
import { getCollection } from "astro:content";

export const prerender = false;

const result = Astro.getActionResult(actions.submitContactForm);
const inputErrors = isInputError(result?.error) ? result.error.fields : {};

let browerChallengeErrorMessage: string | null = null;

if (result?.error?.code === "FORBIDDEN") {
  browerChallengeErrorMessage = result?.error?.message;
}

export type ContactFormInputErrors = typeof inputErrors;

if (result && !result.error) {
  const searchParams = new URLSearchParams();
  searchParams.set("success", "true");

  if (result.data.input?.contactSubmitType) {
    searchParams.set("type", result.data.input.contactSubmitType);
  }

  if (
    result.data.input?.identityGroup &&
    result.data.input?.violenceSubCategory &&
    result.data.input?.contactSubmitType === "contribute"
  ) {
    searchParams.set("identityGroup", result.data.input.identityGroup);
    searchParams.set(
      "violenceSubCategory",
      result.data.input.violenceSubCategory,
    );
  }

  const queryString = searchParams.toString();
  return Astro.redirect(`/contact-submit?${queryString}`);
}

const isSuccessFormSubmission =
  Astro.url.searchParams.get("success") === "true";
const type = Astro.url.searchParams.get("type") as SubmitType;
const identityGroup = Astro.url.searchParams.get("identityGroup");
const violenceSubCategory = Astro.url.searchParams.get("violenceSubCategory");

const identityGroups = await getCollection("identity-groups");
const violenceSubCategories = await getCollection("violence-sub-categories");

const identitySelectOptions = identityGroups.map((identityGroup) => {
  return {
    value: identityGroup.id,
    text: identityGroup.data.name,
  };
});

const violenceSubCategorySelectOptions = violenceSubCategories.map(
  (violenceSubCategory) => {
    return {
      value: violenceSubCategory.id,
      text: violenceSubCategory.data.name,
    };
  },
);
---

<BaseLayout
  title="Contact Submit To Transform"
  description="Contact Submit To Transform"
>
  <script
    slot="head"
    src="https://challenges.cloudflare.com/turnstile/v0/api.js"
    async
    defer></script>

  {
    isSuccessFormSubmission ? (
      <p class="bg-green-600 text-white p-2 text-center">
        <span>Your message has been submitted.</span>

        {type === "contribute-lived-experiences" ? (
          <span>
            After it's accepted by our moderators, it'll show on the lived
            experiences section of{" "}
            <a
              href={`/transform/${identityGroup}-${violenceSubCategory}`}
              class="underline"
            >
              this page
            </a>
          </span>
        ) : null}
      </p>
    ) : null
  }

  {
    browerChallengeErrorMessage ? (
      <p class="bg-red-600 text-white p-2 text-center">
        <span>
          Browser challenged failed. Are you sure you are not a bot? If yes{" "}
          <a href="/contact-submit" class="underline">
            try again
          </a>
          <span>
            . If it still persists contact us at any of our social handles.
          </span>
        </span>
      </p>
    ) : null
  }

  <main>
    <Hero
      title={{
        normal: "Contact",
        slant: "Submit",
      }}
    >
      <p>
        Got a personal experience of violence to share (anonymously or not)?
        Think some of our content could use a refresh? Know any useful links or
        resources we should feature—especially in South Asian languages? Want to
        add grouping techniques that really work for you, to our Trigger Tookit?
        Got a cute floof at home whose videos might brighten up our page? Or
        maybe you've got some stress-busting tunes or feel-good bops to
        recommend? We'd love to hear it all—let us know
      </p>
    </Hero>
    <!-- <div class="flex flex-col lg:flex-row gap-10 justify-center">
      <div class="w-full lg:w-[489px] lg:h-[138px] flex-shrink-0">
        <HeroSvg />
      </div>

      <p class="text-zinc-800 dark:text-zinc-200 max-w-[500px] leading-7">
        Transform relies on your feedback, appraisal and contribution! Our work
        needs to be updated constantly and we are eager to work with members of
        our community to improve and expand on this tool.
      </p>
    </div> -->

    <section class="max-w-4xl mx-auto py-6 px-3 lg:px-6">
      <div class="flex flex-col gap-8 lg:mt-10 justify-between">
        <section>
          <ContactForm
            inputErrors={inputErrors}
            identitySelectOptions={identitySelectOptions}
            violenceSubCategorySelectOptions={violenceSubCategorySelectOptions}
            client:idle
          />
        </section>

        <section class="flex gap-2 flex-col">
          <h2 class="uppercase font-oswald text-2xl dark:text-zinc-200">
            Why do we ask for this information?
          </h2>

          <Prose
            class="prose-a:dark:text-sky-400 prose-a:text-sky-500 text-zinc-800 dark:text-zinc-200 prose-p:my-0 max-w-none"
          >
            <WhyThisInfoContent />
          </Prose>
        </section>

        <section class="flex gap-2 flex-col">
          <h2 class="uppercase font-oswald text-2xl text-yellow-transform">
            Buy us a ko-fi
          </h2>

          <Prose
            class="prose-a:dark:text-sky-400 prose-a:text-sky-500 text-zinc-800 dark:text-zinc-200 prose-p:my-0 max-w-none"
          >
            <BuyUsAKoFiContent />
          </Prose>
        </section>

        <section class="flex flex-col gap-3">
          <h2 class="uppercase font-oswald text-2xl text-yellow-transform">
            Follow us (please?)
          </h2>

          <div class="dark:hidden">
            <Socials type="blackOnWhite" />
          </div>

          <div class="hidden dark:block">
            <Socials type="whiteOnBlack" darkBgClass="bg-zinc-800" />
          </div>
        </section>
      </div>
    </section>
  </main>
</BaseLayout>
