<!-- https://web.dev/articles/building/a-theme-switch-component -->
<button
  class="theme-toggle bg-none border-none p-0 w-8 h-8 [@media(hover:none)]:w-12 [@media(hover:none)]:h-12 aspect-square rounded-full cursor-pointer touch-manipulation outline-offset-[5px] group"
  id="theme-toggle"
  title="toggles light and dark theme"
  aria-label="auto"
  aria-alive="polite"
>
  <svg
    class="sun-and-moon w-full h-full"
    stroke-linecap="round"
    aria-hidden="true"
    width="24"
    height="24"
    viewBox="0 0 24 24"
  >
    <!-- SUN -->
    <circle
      class="sun origin-center fill-[--icon-fill] group-hover:fill-[--icon-fill-hover] dark:scale-[1.75] motion-reduce:transition-none transition-transform duration-500 dark:duration-[0.25s] dark:ease-[--ease-3]"
      cx="12"
      cy="12"
      r="6"
      mask="url(#moon-mask)"
      fill="currentColor"
    >
    </circle>

    <!-- SUN BEAMS -->
    <g
      stroke-width="2px"
      class="sun-beams stroke-[--icon-fill] group-hover:stroke-[--icon-fill-hover] dark:opacity-0 motion-reduce:transition-none"
      stroke="currentColor"
    >
      <line x1="12" y1="1" x2="12" y2="3"></line>
      <line x1="12" y1="21" x2="12" y2="23"></line>
      <line x1="4.22" y1="4.22" x2="5.64" y2="5.64"></line>
      <line x1="18.36" y1="18.36" x2="19.78" y2="19.78"></line>
      <line x1="1" y1="12" x2="3" y2="12"></line>
      <line x1="21" y1="12" x2="23" y2="12"></line>
      <line x1="4.22" y1="19.78" x2="5.64" y2="18.36"></line>
      <line x1="18.36" y1="5.64" x2="19.78" y2="4.22"></line>
    </g>

    <!-- MOON -->
    <mask
      class="moon fill-[--icon-fill] group-hover:fill-[hsl(210,10%,15%)]"
      id="moon-mask"
    >
      <rect x="0" y="0" width="100%" height="100%" fill="white"></rect>
      <circle
        cx="24"
        cy="10"
        r="6"
        fill="black"
        class="motion-reduce:transition-none transition-transform duration-[0.25s] ease-[--ease-out-5] dark:-translate-x-[7px] dark:[@supports(cx:1)]:translate-x-0 dark:[@supports(cx:1)]:[cx:17px] [@supports(cx:1)]:transition-[cx] [@supports(cx:1)]:duration-[0.25s] [@supports(cx:1)]:ease-[--ease-out-5]"
      ></circle>
    </mask>
  </svg>
</button>

<style>
  .theme-toggle {
    -webkit-tap-highlight-color: transparent;
    --icon-fill: hsl(210 10% 30%);
    --icon-fill-hover: hsl(210 10% 15%);
    --ease-elastic-3: cubic-bezier(0.5, 1.25, 0.75, 1.25);
    --ease-elastic-4: cubic-bezier(0.5, 1.5, 0.75, 1.25);
    --ease-3: cubic-bezier(0.25, 0, 0.3, 1);
    --ease-out-5: cubic-bezier(0, 0, 0, 1);

    & .sun-beams {
      @media (prefers-reduced-motion: no-preference) {
        transition:
          transform 0.5s var(--ease-elastic-4),
          opacity 0.5s var(--ease-3);
      }
    }

    & .moon > circle {
      transition-delay: 0.25s;
      transition-duration: 0.5s;
    }
  }

  html.dark .theme-toggle {
    --icon-fill: hsl(210 10% 70%);
    --icon-fill-hover: hsl(210 15% 90%);

    & .sun-beams {
      @media (prefers-reduced-motion: no-preference) {
        transform: rotateZ(-25deg);
        transition-duration: 0.15s;
      }
    }
  }
</style>

<script>
  const storageKey = "theme-preference";
  const theme = {
    value: getColorPreference(),
  };

  function getColorPreference() {
    if (localStorage.getItem(storageKey)) {
      return localStorage.getItem(storageKey) as "dark" | "light";
    } else {
      return window.matchMedia("(prefers-color-scheme: dark)").matches
        ? "dark"
        : "light";
    }
  }

  function setPreference() {
    localStorage.setItem(storageKey, theme.value);
    reflectPreference();
  }

  function reflectPreference() {
    const firstEl = document.firstElementChild!;

    if (theme.value === "light") {
      firstEl.classList.remove("dark");
    } else {
      firstEl.classList.add("dark");
    }

    document
      .querySelector("#theme-toggle")
      ?.setAttribute("aria-label", theme.value);
  }

  function onClick() {
    // flip current value
    theme.value = theme.value === "light" ? "dark" : "light";
    setPreference();
  }

  function setupEvents() {
    document.querySelector("#theme-toggle")?.addEventListener("click", onClick);
    window
      .matchMedia("(prefers-color-scheme: dark)")
      .addEventListener("change", ({ matches: isDark }) => {
        theme.value = isDark ? "dark" : "light";
        setPreference();
      });
  }

  setupEvents();

  document.addEventListener("astro:page-load", () => {
    setupEvents();
  });
</script>
