---
import { Sidebars as SidebarsReact } from "@components/react/Sidebars";
import { getCollection } from "astro:content";
import { readJsonFile } from "@root/src/utils/server/read-json-file-from-root";

const sidebarJSON = await readJsonFile("./src/singletons-data/sidebar.json");

const sortedIdentityGroupsSlugs = sidebarJSON.identityGroups as string[];
const sortedViolenceSubCategoriesSlugs =
  sidebarJSON.violenceSubCatories as string[];

const _identityGroupsList = await getCollection("identity-groups");
const _violenceSubCategoriesList = await getCollection(
  "violence-sub-categories",
);
const _violenceCategoriesList = await getCollection("violence-categories");

function sortArrayBySlugOrder<
  A extends Array<{ slug: string }>,
  B extends Array<string>,
>(originalArray: A, sortedSlugs: B) {
  return originalArray.sort((a, b) => {
    const indexA = sortedSlugs.indexOf(a.slug);
    const indexB = sortedSlugs.indexOf(b.slug);
    return indexA - indexB;
  });
}

const __identityGroupsList = _identityGroupsList.map((item) => {
  return {
    slug: item.id,
    entry: item.data,
  };
});

const slugIndexMap = new Map<string, number>();

sortedIdentityGroupsSlugs.forEach((slug, index) => {
  slugIndexMap.set(slug, index);
});

const identityGroupsList = sortArrayBySlugOrder(
  __identityGroupsList,
  sortedIdentityGroupsSlugs,
);

const _subCategoriesList = _violenceSubCategoriesList.map((item) => {
  return {
    slug: item.id,
    entry: item.data,
  };
});

const subCategoriesList = sortArrayBySlugOrder(
  _subCategoriesList,
  sortedViolenceSubCategoriesSlugs,
);

const categoriesList = _violenceCategoriesList.map((item) => {
  return {
    slug: item.id,
    entry: item.data,
  };
});

type PreSelectedSlugs = {
  identityGroupSlug?: string;
  violenceSubCategorySlug?: string;
};

export type PreSelectedSlugsProp = {
  preSelectedSlugs?: PreSelectedSlugs;
};

type Props = {
  openKnowledgeSidebarByDefault?: boolean;
  isDetailPage: boolean;
} & PreSelectedSlugsProp;

const { openKnowledgeSidebarByDefault, preSelectedSlugs, isDetailPage } =
  Astro.props;
---

<SidebarsReact
  client:idle
  identityGroupsList={identityGroupsList}
  subCategoriesList={subCategoriesList}
  categoriesList={categoriesList}
  openKnowledgeSidebarByDefault={openKnowledgeSidebarByDefault}
  preSelectedSlugs={preSelectedSlugs}
  isDetailPage={isDetailPage}
/>
