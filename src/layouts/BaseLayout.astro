---
import { SEO } from "astro-seo";
import Footer from "@components/astro/Footer.astro";
import Header from "@components/astro/Header.astro";
// import type { ImageMetadata } from "astro";
// import { getImage } from "astro:assets";

interface Props {
  title: string;
  description: string;
  // imageSrc: ImageMetadata | string;
  // imageAlt: string;
}

const {
  title,
  description,
  // imageSrc: imgSrc, imageAlt
} = Astro.props;
// const imageSrc = (await getImage({ src: imgSrc })).src;
---

<!doctype html>
<html lang="en" class="dark:bg-zinc-800">
  <head>
    <link rel="sitemap" href="/sitemap-index.xml" />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <!-- <link
      href="https://fonts.googleapis.com/css2?family=DM+Sans:ital,opsz,wght@0,9..40,100..1000;1,9..40,100..1000&display=swap"
      rel="stylesheet"
    /> -->
    <link
      href="https://fonts.googleapis.com/css2?family=Oswald:wght@200..700&display=swap"
      rel="stylesheet"
    />

    <link rel="mask-icon" href="/safari-pinned-tab.svg" color="#5bbad5" />

    <meta charset="UTF-8" />
    <SEO
      title={title}
      description={description}
      titleDefault="Natasha Sarkar"
      extend={{
        meta: [
          {
            name: "viewport",
            content: "width=device-width, initial-scale=1",
          },
          { name: "generator", content: Astro.generator },
          { name: "msapplication-TileColor", content: "#da532c" },
          { name: "theme-color", content: "#ffffff" },
        ],
        // link: [
        //   {
        //     rel: "apple-touch-icon",
        //     sizes: "180x180",
        //     href: "/apple-touch-icon.png",
        //   },
        //   {
        //     rel: "icon",
        //     type: "image/png",
        //     sizes: "16x16",
        //     href: "/favicon-16x16.png",
        //   },
        //   {
        //     rel: "manifest",
        //     href: "/site.webmanifest",
        //   },
        // ],
      }}
    />
  </head>
  <body class="relative">
    <Header />
    <slot />

    <!-- global styles -->
    <style is:global>
      html {
        overflow-y: scroll;
        scroll-behavior: smooth;
      }

      html,
      body {
        width: 100%;
        height: 100%;
        margin: 0;
        padding: 0;
      }

      /* https://www.bram.us/2021/07/23/prevent-unwanted-layout-shifts-caused-by-scrollbars-with-the-scrollbar-gutter-css-property/ */

      /* https://css-tricks.com/scrollbar-reflowing/ */
      /* @supports (scrollbar-gutter: stable) {
        html {
          scrollbar-gutter: stable both-edges;
          overflow-y: revert;
        }
      } */

      ::-webkit-scrollbar {
        --size: 7px;
        width: var(--size);
        height: var(--size);
        background-color: transparent;
      }

      ::-webkit-scrollbar-thumb {
        background-color: transparent;
        /* 1e4px === 10000px source: https://web.dev/articles/building/a-loading-bar-component */
        border-radius: 1e4px;
      }

      ::-webkit-scrollbar-thumb {
        background-color: #a1a1aa;
      }

      .no-scrollbar {
        scrollbar-width: none;
        -ms-overflow-style: none;
      }
    </style>

    <!-- theme things -->
    <script>
      import { theme as themeAtom } from "@store/global";

      // https://adropincalm.com/blog/notes-on-typescript-custom-events/
      const themeChangedCallback = (
        e: CustomEvent<{
          themeValue: "light" | "dark";
        }>,
      ) => {
        themeAtom.set(e.detail.themeValue);
      };

      function setupEvents() {
        document.addEventListener(
          "theme-changed",
          themeChangedCallback as EventListener,
        );
      }

      function init() {
        setupEvents();
        /** since the inline script inside `ThemeToggle.astro` executes before this script might be downloaded and executed, we need to depend on this global theme value to init the theme nano store atom for the first time. For the latter switching of theme, manually by the user, we listen to the 'theme-changed' custom event in `setupEvents` */
        if (window.themeValue) {
          themeAtom.set(window.themeValue);
        }
      }

      function astroInit() {
        init();

        document.addEventListener("astro:page-load", () => {
          init();
        });
      }

      astroInit();
    </script>

    <Footer />
  </body>
</html>
